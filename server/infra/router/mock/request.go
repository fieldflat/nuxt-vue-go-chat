// Code generated by MockGen. DO NOT EDIT.
// Source: infra/router/request.go

// Package mock_router is a generated GoMock package.
package mock_router

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/sekky0905/nuxt-vue-go-chat/server/domain/model"
	http "net/http"
	reflect "reflect"
)

// MockRequestManager is a mock of RequestManager interface
type MockRequestManager struct {
	ctrl     *gomock.Controller
	recorder *MockRequestManagerMockRecorder
}

// MockRequestManagerMockRecorder is the mock recorder for MockRequestManager
type MockRequestManagerMockRecorder struct {
	mock *MockRequestManager
}

// NewMockRequestManager creates a new mock instance
func NewMockRequestManager(ctrl *gomock.Controller) *MockRequestManager {
	mock := &MockRequestManager{ctrl: ctrl}
	mock.recorder = &MockRequestManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequestManager) EXPECT() *MockRequestManagerMockRecorder {
	return m.recorder
}

// GetValueOfURLParamWithAcceptanceEmpty mocks base method
func (m *MockRequestManager) GetValueOfURLParamWithAcceptanceEmpty(r *http.Request, key model.PropertyNameForDeveloper) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueOfURLParamWithAcceptanceEmpty", r, key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetValueOfURLParamWithAcceptanceEmpty indicates an expected call of GetValueOfURLParamWithAcceptanceEmpty
func (mr *MockRequestManagerMockRecorder) GetValueOfURLParamWithAcceptanceEmpty(r, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueOfURLParamWithAcceptanceEmpty", reflect.TypeOf((*MockRequestManager)(nil).GetValueOfURLParamWithAcceptanceEmpty), r, key)
}

// GetValueOfURLParamWithoutAcceptanceEmpty mocks base method
func (m *MockRequestManager) GetValueOfURLParamWithoutAcceptanceEmpty(r *http.Request, key model.PropertyNameForDeveloper) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueOfURLParamWithoutAcceptanceEmpty", r, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetValueOfURLParamWithoutAcceptanceEmpty indicates an expected call of GetValueOfURLParamWithoutAcceptanceEmpty
func (mr *MockRequestManagerMockRecorder) GetValueOfURLParamWithoutAcceptanceEmpty(r, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueOfURLParamWithoutAcceptanceEmpty", reflect.TypeOf((*MockRequestManager)(nil).GetValueOfURLParamWithoutAcceptanceEmpty), r, key)
}

// GetIntValueOfURLParam mocks base method
func (m *MockRequestManager) GetIntValueOfURLParam(r *http.Request, key model.PropertyNameForDeveloper) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIntValueOfURLParam", r, key)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIntValueOfURLParam indicates an expected call of GetIntValueOfURLParam
func (mr *MockRequestManagerMockRecorder) GetIntValueOfURLParam(r, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntValueOfURLParam", reflect.TypeOf((*MockRequestManager)(nil).GetIntValueOfURLParam), r, key)
}

// GetUint32ValueOfURLParam mocks base method
func (m *MockRequestManager) GetUint32ValueOfURLParam(r *http.Request, key model.PropertyNameForDeveloper) (uint32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint32ValueOfURLParam", r, key)
	ret0, _ := ret[0].(uint32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUint32ValueOfURLParam indicates an expected call of GetUint32ValueOfURLParam
func (mr *MockRequestManagerMockRecorder) GetUint32ValueOfURLParam(r, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint32ValueOfURLParam", reflect.TypeOf((*MockRequestManager)(nil).GetUint32ValueOfURLParam), r, key)
}
